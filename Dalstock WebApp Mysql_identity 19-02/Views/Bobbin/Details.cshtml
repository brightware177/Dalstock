@model Dalstock_WebApp_Mysql_identity_19_02.Models.BobbinDetailViewModel

<div class="page-content" style="min-height:90.5vh">
    <div class="page-bar" style="margin:auto">
        <div class="page-title-breadcrumb">
            <div class="pull-left">

            </div>

        </div>
    </div>

    <div class="row page-content-custom">
        <div class="col-md-12">
            <div class="card">

                <div class="card-body card-topline-aqua">


                    <div class="form-horizontal">
                        <div class="page-title sbold">
                            Bobijndetail
                            @if (Model.Bobbin.IsReturned)
                            {
                                <span class="label label-sm label-success m-l-20" style="font-size:14px;">Afgehandeld</span>
                            }
                            <button class="btn btn-white pull-right" onclick="window.history.go(-1); return false;">Terugkeren</button>
                            @if (Model.Bobbin.IsReturned)
                            {
                                <button style="margin-right:5px;" class="btn btn-outline btn-danger pull-right" onclick="location.href='@Url.Action("ContinueEditBobbin", "Bobbin", new { id = Model.Bobbin.Id })'">
                                    <i class="fa fa-check"></i> verder aanpassen
                                </button>
                            }
                            else
                            {
                                <button style="margin-right:5px;" class="btn btn-outline btn-danger pull-right" onclick="location.href='@Url.Action("RetourBobbin", "Bobbin", new { id = Model.Bobbin.Id })'">
                                    <i class="fa fa-check"></i> Retourneren
                                </button>
                            }
                        </div>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="form-group col-5">
                                <table style="width:100%;line-height:40px; font-size:15px; font-weight:500;">
                                    <tr>
                                        <td width="50%" style="font-weight:800;">@Html.DisplayNameFor(model => model.Bobbin.BobbinId): </td>
                                        <td width="50%" style="font-size:15px; font-weight:bold;">@Html.DisplayFor(model => model.Bobbin.BobbinId, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    </tr>
                                    <tr>
                                        <td width="50%">@Html.DisplayNameFor(model => model.Bobbin.FetchDate): </td>
                                        <td width="50%">@Html.DisplayFor(model => model.Bobbin.FetchDate, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    </tr>
                                    <tr>
                                        <td width="50%">@Html.DisplayNameFor(model => model.Bobbin.FetchLocation): </td>
                                        <td width="50%">@Html.DisplayFor(model => model.Bobbin.FetchLocation, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    </tr>
                                    <tr>
                                        <td width="50%">@Html.DisplayNameFor(model => model.Bobbin.CableLength): </td>
                                        <td width="50%">@Html.DisplayFor(model => model.Bobbin.CableLength, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    </tr>
                                    <tr>
                                        <td width="50%">@Html.DisplayNameFor(model => model.Bobbin.AmountRemains): </td>
                                        <td width="50%">@Html.DisplayFor(model => model.Bobbin.AmountRemains, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="form-group col-7">
                                <table style="width:100%;line-height:40px; font-size:15px; font-weight:500;">
                                    <tr>
                                        <td width="30%" style="font-weight:800;">@Html.DisplayNameFor(model => model.Bobbin.CableType.Description): </td>
                                        <td width="70%" style="font-size:15px; font-weight:bold;">@Html.DisplayFor(model => model.Bobbin.CableType.Description, new { htmlAttributes = new { @class = "form-control" } })</td>
                                    </tr>
                                    @if (Model.Bobbin.IsReturned)
                                    {
                                        <tr>
                                            <td width="30%">@Html.DisplayNameFor(model => model.Bobbin.IsReturned): </td>
                                            <td width="70%"><span><i class="fa fa-check-circle check-icon"></i> Geretourneerd</span></td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr>
                                            <td width="30%">@Html.DisplayNameFor(model => model.Bobbin.IsReturned): </td>
                                            <td width="70%"><span><i class="fa fa-exclamation-circle warning-icon"></i> Niet geretourneerd</span></td>
                                        </tr>
                                    }
                                    @if (Model.Bobbin.ReturnDate != null)
                                    {
                                        <tr>
                                            <td width="30%">@Html.DisplayNameFor(model => model.Bobbin.ReturnDate): </td>
                                            <td width="70%">@Html.DisplayFor(model => model.Bobbin.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })</td>
                                        </tr>
                                    }

                                </table>
                            </div>
                        </div>
                        <br />
                        @if (!Model.Bobbin.IsReturned)
                        {
                            <div class="page-title sbold">
                                Meting toevoegen
                            </div>
                            <hr />
                            <button type="button" class="btn btn-outline btn-info" data-toggle="modal" data-target="#myModal">
                                <i class="fa fa-plus"></i> Voeg toe
                            </button>
                            <div>
                                <div class="modal fade modal-wide" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content" id="createBobbinDebit">
                                                @Html.Partial("~/Views/Bobbin/_AddBobbinDebit.cshtml",Model)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="page-title sbold">
                                Metingen
                            </div>
                            <hr />
                        }


                        <table class="table table-bordered table-hover order-column" style="width: 100%" id="exampleBobbinDebit">
                            <thead>
                                <tr>
                                    <th> Id </th>
                                    <th> Beginindex </th>
                                    <th> Eindindex </th>
                                    <th> Verbruikte kabel (m) </th>
                                    <th> Deelnetwerk </th>
                                    @if (!Model.Bobbin.IsReturned)
                                    {
                                        <th> Verwijderen </th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Bobbin.BobbinDebits)
                                {
                                    <tr class="gradeX">
                                        <td hidden>
                                            @Html.DisplayFor(modelItem => item.BobbinDebitId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.StartIndex)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.EndIndex)
                                        </td>

                                        <td width="150px">
                                            @Html.DisplayFor(modelItem => item.AmountUsed)
                                        </td>

                                        <td>
                                            <a class="hyperlink-in-table" href="@Url.Action("Details", new { id = item.Workplace.Id })">
                                                <span class="sbold">@Html.DisplayFor(modelItem => item.Workplace.WorkplaceId)</span>
                                                <br>
                                                <span class="span-table-gray">
                                                    @Html.DisplayFor(modelItem => item.Workplace.Address),
                                                    @Html.DisplayFor(modelItem => item.Workplace.City.Zipcode) @Html.DisplayFor(modelItem => item.Workplace.City.Name)
                                                </span>
                                            </a>
                                        </td>
                                        @if (!item.Bobbin.IsReturned)
                                        {
                                            <td class="center" width="50px"><a href="@Url.Action("DeleteBobbinDebit", "Bobbin", new { id = item.BobbinDebitId })" class="text-inverse DeleteButton" title="Delete" data-toggle="tooltip"><i class="fa fa-trash"></i></a></td>
                                        }
                                    </tr>
                                }

                            </tbody>
                        </table>



                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

@section Styles {

    @Styles.Render("~/bundles/datatable")
    @Styles.Render("~/bundles/steps")
    @Styles.Render("~/bundles/chosen")
    @Styles.Render("~/bundles/select2")
    @Styles.Render("~/bundles/sweet-alert")
}
@section Scripts {

    @Scripts.Render("~/scripts/datatable")
    @Scripts.Render("~/scripts/steps")
    @Scripts.Render("~/scripts/stepsValidate")
    @Scripts.Render("~/scripts/chosen")
    @Scripts.Render("~/scripts/select2")

    <script type="text/javascript">


        $(document).ready(function () {
            $('.chosen-select').chosen({ width: "100%" });
            $('.DeleteButton').on('click', function (e, data) {
                var link = $(this).attr('href');
                if (!data) {
                    handleDelete(e, 1, link);
                } else {
                    window.location = $(this).attr('href');
                }
            });
        });
        function handleDelete(e, stop, link) {
            if (stop) {
                e.preventDefault();
                swal({
                    title: "Bent u zeker?",
                    text: "Indien u deze bobijnmeting verwijderd, kan u deze niet meer recupereren!",
                    type: "warning",
                    showCancelButton: true,
                    cancelButtonText: "Annuleer",
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Ja, verwijder!",
                    closeOnConfirm: false
                }, function (isConfirm) {
                    if (isConfirm) {
                        $.ajax({
                            url: link,
                            type: "Delete",
                            dataType: "html",
                            success: function (data) {
                                swal({ title: "Verwijderd!", text: "De bobijnmeting is succesvol verwijderd.", type: "success" },
                                    function () {
                                        window.location.reload(true);
                                    });
                            },
                            error: function (xhr, status, error) {
                                swal({ title: "Fout!", text: "Sorry, kon bobijnmeting niet verwijderen.\nExtra informatie: " + error, type: "error" },
                                    function () {

                                    });
                            }
                        });
                    }
                });
            }
        };

    </script>
}